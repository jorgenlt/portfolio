<!-- Modal -->
<div class="modal fade" id="tidderModal" tabindex="-1" aria-labelledby="tidderModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-fullscreen-lg-down modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-2" id="tidderModalLabel">tidder</h1>
        <span data-bs-dismiss="modal" aria-label="Close"><i class="fa-solid fa-xmark hover-brighter-green"></i></span>
      </div>
      <div class="modal-body modal-template tidder-modal-body">
        <div class="tidder-lede">
          <div>
            <p>A responsive reddit clone web application.</p>
            <p>Visit site: <%= link_to 'tidder.eu', 'https://www.tidder.eu', target: "_blank" %></p>
            <p><%= link_to 'View on GitHub', 'https://github.com/jorgenlt/tidder', target: "_blank"  %></p>
          </div>
        </div>

        <div class="tidder-media">
          <div class="tidder-phone">
            <div class="tidder-video">
            <iframe src="https://player.vimeo.com/video/798677053?h=ea04464374&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479"
                    width="290"
                    height="644"
                    frameborder="0"
                    allow="autoplay; fullscreen; picture-in-picture"
                    allowfullscreen title="tidder_demo">
            </iframe>
            </div>
            <div class="tidder-photos">
              <%= image_tag 'tidder_phone_1.png', alt: "Tidder on phone." %>
            </div>
          </div>

          <div class="tidder-desktop">
            <%= image_tag 'tidder_desktop_1.png', alt: "Tidder on desktop." %>
          </div>
        </div>

        <div class="tidder-documentation">
          <h2>Features</h2>
            <ul>
              <li><i class="fa-solid fa-circle-arrow-right"></i>A user can sign up and sign in. Email and password can be edited by the user at a later time.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>A user can create a new post.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>A user can upvote or downvote a post.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>A user can create a new comment on a post.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>A user can upvote or downvote a comment on a post.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Secure authentication and authorization.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Mobile responsiveness to ensure optimal user experience.</li>
            </ul>

          <h2>Technologies</h2>
          <p>
            Tidder is built with <%= link_to 'Ruby on Rails', 'https://rubyonrails.org/', target: '_blank' %> on both backend and frontend.
            Data is stored in a PostgreSQL database and Cloudinary is used for cloud storage of the profile image files. Authentication is being
            handled with the <%= link_to 'Devise gem', 'https://github.com/heartcombo/devise', target: '_blank' %>. This ensures the user to
            securely sign in and sign up to the application.

            The application is additionally supported by Webpack, simple_form, act_as_votable, stimulus and bootstrap.
          </p>

          <h2>Technical challenges</h2>
          <h3>Upvote and downvote</h3>
          <p>
            A must have feature when making a reddit-clone is the famous upvote and downvote first used by
            <%= link_to 'Everything2', 'https://everything2.com/title/An+Introduction+to+Everything2' %> and that Reddit adopted and made a popular feature
            on many other websites and applications. The first approach to achieve this feature was done by making everything from scratch with the
            appropriate database tables and making the logic in the controllers. After some research it was decided to go with the Ruby on Rails gem
            <%= link_to 'acts_as_votable', 'https://github.com/ryanto/acts_as_votable' %> developed by <%= link_to 'Ryan Toronto', 'https://github.com/ryanto' %>.
          </p>
          <p>
            This gem is at first glance a very straight forward solution to the challenge and for the most part that is correct. However, there is no immidate
            solution to make the voting appear in real-time to the user. To acchieve this one must implement technologies such as AJAX.
          </p>
          <p>
            First the databases are created according to the act_as_votable documentation. Then simply the terms "acts_as_voter" or "acts_as_votable" are added to the
            appropriate models. The logic for the voting itself was done in the controllers. The code below is from the posts controller and the upvote/downvote logic
            was made in the same way for the comments controller.
          </p>
          <pre>
            <code class="language-ruby">
# app/controllers/posts_controller.rb

  def upvote
    @post = Post.find(params[:id])
    if current_user.voted_up_on? @post
      @post.unvote_by current_user
    else
      @post.upvote_by current_user
    end
    redirect_to root_path

  end

  def downvote
    @post = Post.find(params[:id])
    if current_user.voted_down_on? @post
      @post.unvote_by current_user
    else
      @post.downvote_by current_user
    end
    redirect_to root_path
  end
            </code>
          </pre>
          <p>
            Upvote and downvote in the views. Below shown by an example of upvote a post.
          </p>
          <pre>
            <code class="language-html">
&lt;!-- app/views/posts/_upvote_link.html.erb -->

&lt;%= content_tag "div", id: "upvote-#{post.id}" do %>
  &lt;%= link_to upvote_post_path(post), method: :patch, remote: true, data: { disable_with: "voting..." } do %>
    &lt;% if current_user.voted_up_on? post %>
      &lt;i class="fa-solid fa-arrow-up" style="color: green;">&lt;/i>
    &lt;% else %>
      &lt;i class="fa-solid fa-arrow-up">&lt;/i>
    &lt;% end %>
  &lt;% end %>
&lt;% end %>
            </code>
          </pre>

          <h2>Upcoming features and fixes</h2>
          <ul>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Sort out authorization issues and dependencies.</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>AJAX on upvote and downvote.</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Create a profile and add a profile picture.</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Search for a post.</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Save a post.</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Share a post.</li>
          </ul>

        </div>
      </div>
    </div>
  </div>
</div>
