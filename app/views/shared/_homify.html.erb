<!-- Modal -->
<div class="modal fade" id="homifyModal" tabindex="-1" aria-labelledby="homifyModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-fullscreen-lg-down modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-2" id="homifyModalLabel">homify</h1>
        <span data-bs-dismiss="modal" aria-label="Close"><i class="fa-solid fa-xmark hover-brighter-green"></i></span>
      </div>
      <div class="modal-body modal-template homify-modal-body">
        <div class="homify-lede">
          <div>
            <p>An app for finding apartments for rent by swiping and matching.</p>
            <p>Visit site: <%#= link_to 'homify', '#', target: "_blank"  %></p>
            <p><%= link_to 'View on GitHub', 'https://github.com/jorgenlt/homify', target: "_blank"  %></p>
          </div>
          <div class="homify-video">

          </div>
        </div>
        <div class="homify-media">
          <div class="homify-phone">
            <iframe src="https://player.vimeo.com/video/808073105?h=86bec683c0&amp;title=0&amp;byline=0&amp;portrait=0&amp;speed=0&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479"
                    width="250"
                    height="556"
                    frameborder="0"
                    allow="autoplay; fullscreen; picture-in-picture"
                    allowfullscreen
                    title="homify demo">
            </iframe>

            <div class="homify-photos">
              <%= image_tag 'homify-pixel-2-1-rot.png', alt: "homify on phone." %>
            </div>
          </div>
          <div>
          </div>
          <div class="homify-desktop">
            <%#= image_tag '', alt: "homify on desktop." %>
          </div>
        </div>

        <div class="homify-documentation">
          <h2>Features</h2>
            <ul>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Sign up and create a profile with a profile picture.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Create a new search.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Filter search results by editing your search.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Swipe on apartments to find a match.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Instantly book an appointments for viewings on your matches.</li>
              <li><i class="fa-solid fa-circle-arrow-right"></i>Live instant chat feature with matches.</li>
            </ul>

          <h2>Technologies</h2>
          <p>
            Homify is built with <%= link_to 'Ruby on Rails', 'https://rubyonrails.org/', target: '_blank' %> on both backend and frontend. Data is stored in a PostgreSQL database and Cloudinary is used for cloud storage of the profile and apartment image files. Authentication and authorization is being handled with the <%= link_to 'Devise gem', 'https://github.com/heartcombo/devise', target: '_blank' %>. The apps search feature is made with the <%= link_to "PgSearch", 'https://github.com/Casecommons/pg_search', target: 'blank' %> gem.
          </p>
          <p>
            The application is additionally supported by Webpack, simple_form, stimulus and bootstrap.
          </p>

          <h2>Technical challenges</h2>
          <h3>Swiping on apartment cards</h3>
          <p>
            The Tinder-like swipe feature to register a "like" or a "nope" turned out to be quite a challenge. The final code is built upon the Javascript library <%= link_to 'Hammer.js', 'https://hammerjs.github.io/', target: '_blank' %>, which enables touch gestures to web applications. With a lot of hits and misses the final result both looked good and run smoothly in the web browser.
          </p>
          <pre>
            <code class="language-javascript">
// app/javascript/controllers/swipe_controller.js

import { Controller } from "@hotwired/stimulus"
import '../swipe_animation'

// Connects to data-controller="swipe"
export default class extends Controller {
  static targets = ["match", "like", "nope"]

  // modal pop-up with show listing
  toggle(event) {
    document.getElementById(`button${event.path[2].dataset.id}`).click()
  }


  connect() {
    // Swiping function is made with Hammer.JS, see below.

    /*! Hammer.JS - v2.0.8 - 2016-04-23
    * http://hammerjs.github.io/
    *
    * Copyright (c) 2016 Jorik Tangelder;
    * Licensed under the MIT license */

    // function to show match-animation for a set time
    let matchCounter = 0;
    let matchAnimation = () => {
      matchCounter += 1;
      if (matchCounter > 2) {
        const match = document.getElementById("match-animation");
        match.classList.remove('d-none');
        setTimeout(() => {
          match.classList.add('d-none')
        }, 2300);
      }
    }


    //function to fade in/out "like"
    let fadeInOutLike = () => {
      const like = document.getElementById("fade-in-out-like");
      like.classList.remove('d-none');
      setTimeout(() => {
        like.classList.add('d-none');
      },2000);
    }

    //function to fade in/out "like"
    let fadeInOutNope = () => {
      const nope = document.getElementById("fade-in-out-nope");
      nope.classList.remove('d-none');
      setTimeout(() => {
        nope.classList.add('d-none');
      }, 2000);
    }

    // selecting element with class profile to let profiles
    let profiles = document.querySelectorAll('.profile');

    const maxAngle = 42;
    const smooth = 0.3;
    const threshold = 42;
    const thresholdMatch = 150;
    profiles.forEach(setupDragAndDrop);

    function setupDragAndDrop(profile) {
      const hammertime = new Hammer(profile);

      hammertime.on('pan', function (e) {
        profile.classList.remove('profile--back');
        let posX = e.deltaX;
        let posY = Math.max(0, Math.abs(posX * smooth) - 42);
        let angle = Math.min(Math.abs(e.deltaX * smooth / 100), 1) * maxAngle;
        if (e.deltaX < 0) {
          angle *= -1;
        }

        // user is selecting and holding the card and can move it left or right, back and forth.
        profile.style.transform = `translateX(${posX}px) translateY(${posY}px) rotate(${angle}deg)`;
        profile.classList.remove('profile--matching');
        profile.classList.remove('profile--nexting');
        if (posX > thresholdMatch) {
          profile.classList.add('profile--matching');
          console.log('✅ User is about to swipe yes')

          fadeInOutLike();
        } else if (posX < -thresholdMatch) {
          profile.classList.add('profile--nexting');
          console.log('⛔ User is about to swipe no');

          fadeInOutNope();
        }

        // user releases card on the left (nope),
        // near the middle (back to middle, no action),
        // or on the right (yes)
        if (e.isFinal) {
          // right side, yes.
          profile.style.transform = ``;
          if (posX > thresholdMatch) {
            profile.classList.add('profile--match');
            console.log('✅ Yes (user is created in matches table)');

            matchAnimation();

            if (matchCounter > 2) {
              // creating a new match in matches-table.
              console.log( `matchCounter is ${matchCounter}`);
              console.dir(document.location.search.split('=')[1]);
              const searchId = document.location.search.split('=')[1];
              const url =  `/listings/${profile.dataset.id}/matches`;
              const body = {match: {listing_id: profile.dataset.id, search_id: searchId}};
              fetch(url, {
                method: "POST",
                body: JSON.stringify(body),
                headers: {
                  'Content-Type': 'application/json',
                  "X-CSRF-Token": document.querySelector("meta[name=csrf-token]").content}
                })
              }

              // left side, nope
            } else if (posX < -thresholdMatch) {
              profile.classList.add('profile--next');
              console.log('⛔ No!');
            } else {
              profile.classList.add('profile--back');
            }
          }
        });
      }
    }
  }
            </code>
          </pre>
          <p class="mt-4 mb-2">
            Text with code below.
          </p>
          <pre>
            <code class="language-ruby">
Some Code.
            </code>
          </pre>

          <h2>Upcoming features</h2>
          <ul>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Upcoming feature</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Upcoming feature</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Upcoming feature</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Upcoming feature</li>
            <li><i class="fa-solid fa-circle-arrow-right"></i>Upcoming feature</li>
          </ul>

        </div>
      </div>
    </div>
  </div>
</div>
